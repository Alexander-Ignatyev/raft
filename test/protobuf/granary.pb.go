// Code generated by protoc-gen-go. DO NOT EDIT.
// source: granary.proto

/*
Package granary is a generated protocol buffer package.

It is generated from these files:
	granary.proto

It has these top-level messages:
	Request
	Response
	GranaryInfoRequest
	GranaryInfoResponse
	PutGrainRequest
	PutGrainResponse
	TakeGrainRequest
	TakeGrainResponse
*/
package granary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	// Types that are valid to be assigned to Request:
	//	*Request_GranaryInfo
	//	*Request_PutGrain
	//	*Request_TakeGrain
	Request isRequest_Request `protobuf_oneof:"request"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isRequest_Request interface {
	isRequest_Request()
}

type Request_GranaryInfo struct {
	GranaryInfo *GranaryInfoRequest `protobuf:"bytes,1,opt,name=granaryInfo,oneof"`
}
type Request_PutGrain struct {
	PutGrain *PutGrainRequest `protobuf:"bytes,2,opt,name=putGrain,oneof"`
}
type Request_TakeGrain struct {
	TakeGrain *TakeGrainRequest `protobuf:"bytes,3,opt,name=takeGrain,oneof"`
}

func (*Request_GranaryInfo) isRequest_Request() {}
func (*Request_PutGrain) isRequest_Request()    {}
func (*Request_TakeGrain) isRequest_Request()   {}

func (m *Request) GetRequest() isRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Request) GetGranaryInfo() *GranaryInfoRequest {
	if x, ok := m.GetRequest().(*Request_GranaryInfo); ok {
		return x.GranaryInfo
	}
	return nil
}

func (m *Request) GetPutGrain() *PutGrainRequest {
	if x, ok := m.GetRequest().(*Request_PutGrain); ok {
		return x.PutGrain
	}
	return nil
}

func (m *Request) GetTakeGrain() *TakeGrainRequest {
	if x, ok := m.GetRequest().(*Request_TakeGrain); ok {
		return x.TakeGrain
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_GranaryInfo)(nil),
		(*Request_PutGrain)(nil),
		(*Request_TakeGrain)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// request
	switch x := m.Request.(type) {
	case *Request_GranaryInfo:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GranaryInfo); err != nil {
			return err
		}
	case *Request_PutGrain:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PutGrain); err != nil {
			return err
		}
	case *Request_TakeGrain:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TakeGrain); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Request has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 1: // request.granaryInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GranaryInfoRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_GranaryInfo{msg}
		return true, err
	case 2: // request.putGrain
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutGrainRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_PutGrain{msg}
		return true, err
	case 3: // request.takeGrain
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TakeGrainRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_TakeGrain{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// request
	switch x := m.Request.(type) {
	case *Request_GranaryInfo:
		s := proto.Size(x.GranaryInfo)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_PutGrain:
		s := proto.Size(x.PutGrain)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_TakeGrain:
		s := proto.Size(x.TakeGrain)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Response struct {
	// Types that are valid to be assigned to Response:
	//	*Response_GranaryInfo
	//	*Response_PutGrain
	//	*Response_TakeGrain
	Response isResponse_Response `protobuf_oneof:"response"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isResponse_Response interface {
	isResponse_Response()
}

type Response_GranaryInfo struct {
	GranaryInfo *GranaryInfoResponse `protobuf:"bytes,1,opt,name=granaryInfo,oneof"`
}
type Response_PutGrain struct {
	PutGrain *PutGrainResponse `protobuf:"bytes,2,opt,name=putGrain,oneof"`
}
type Response_TakeGrain struct {
	TakeGrain *TakeGrainResponse `protobuf:"bytes,3,opt,name=takeGrain,oneof"`
}

func (*Response_GranaryInfo) isResponse_Response() {}
func (*Response_PutGrain) isResponse_Response()    {}
func (*Response_TakeGrain) isResponse_Response()   {}

func (m *Response) GetResponse() isResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Response) GetGranaryInfo() *GranaryInfoResponse {
	if x, ok := m.GetResponse().(*Response_GranaryInfo); ok {
		return x.GranaryInfo
	}
	return nil
}

func (m *Response) GetPutGrain() *PutGrainResponse {
	if x, ok := m.GetResponse().(*Response_PutGrain); ok {
		return x.PutGrain
	}
	return nil
}

func (m *Response) GetTakeGrain() *TakeGrainResponse {
	if x, ok := m.GetResponse().(*Response_TakeGrain); ok {
		return x.TakeGrain
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_GranaryInfo)(nil),
		(*Response_PutGrain)(nil),
		(*Response_TakeGrain)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// response
	switch x := m.Response.(type) {
	case *Response_GranaryInfo:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GranaryInfo); err != nil {
			return err
		}
	case *Response_PutGrain:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PutGrain); err != nil {
			return err
		}
	case *Response_TakeGrain:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TakeGrain); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Response has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 1: // response.granaryInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GranaryInfoResponse)
		err := b.DecodeMessage(msg)
		m.Response = &Response_GranaryInfo{msg}
		return true, err
	case 2: // response.putGrain
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutGrainResponse)
		err := b.DecodeMessage(msg)
		m.Response = &Response_PutGrain{msg}
		return true, err
	case 3: // response.takeGrain
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TakeGrainResponse)
		err := b.DecodeMessage(msg)
		m.Response = &Response_TakeGrain{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// response
	switch x := m.Response.(type) {
	case *Response_GranaryInfo:
		s := proto.Size(x.GranaryInfo)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_PutGrain:
		s := proto.Size(x.PutGrain)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_TakeGrain:
		s := proto.Size(x.TakeGrain)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GranaryInfoRequest struct {
}

func (m *GranaryInfoRequest) Reset()                    { *m = GranaryInfoRequest{} }
func (m *GranaryInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GranaryInfoRequest) ProtoMessage()               {}
func (*GranaryInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GranaryInfoResponse struct {
	Size     int64 `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	Capacity int64 `protobuf:"varint,2,opt,name=capacity" json:"capacity,omitempty"`
}

func (m *GranaryInfoResponse) Reset()                    { *m = GranaryInfoResponse{} }
func (m *GranaryInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GranaryInfoResponse) ProtoMessage()               {}
func (*GranaryInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GranaryInfoResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GranaryInfoResponse) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type PutGrainRequest struct {
	Number int64 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
}

func (m *PutGrainRequest) Reset()                    { *m = PutGrainRequest{} }
func (m *PutGrainRequest) String() string            { return proto.CompactTextString(m) }
func (*PutGrainRequest) ProtoMessage()               {}
func (*PutGrainRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PutGrainRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PutGrainResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *PutGrainResponse) Reset()                    { *m = PutGrainResponse{} }
func (m *PutGrainResponse) String() string            { return proto.CompactTextString(m) }
func (*PutGrainResponse) ProtoMessage()               {}
func (*PutGrainResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PutGrainResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *PutGrainResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TakeGrainRequest struct {
	Number int64 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
}

func (m *TakeGrainRequest) Reset()                    { *m = TakeGrainRequest{} }
func (m *TakeGrainRequest) String() string            { return proto.CompactTextString(m) }
func (*TakeGrainRequest) ProtoMessage()               {}
func (*TakeGrainRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *TakeGrainRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type TakeGrainResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *TakeGrainResponse) Reset()                    { *m = TakeGrainResponse{} }
func (m *TakeGrainResponse) String() string            { return proto.CompactTextString(m) }
func (*TakeGrainResponse) ProtoMessage()               {}
func (*TakeGrainResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *TakeGrainResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *TakeGrainResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "granary.Request")
	proto.RegisterType((*Response)(nil), "granary.Response")
	proto.RegisterType((*GranaryInfoRequest)(nil), "granary.GranaryInfoRequest")
	proto.RegisterType((*GranaryInfoResponse)(nil), "granary.GranaryInfoResponse")
	proto.RegisterType((*PutGrainRequest)(nil), "granary.PutGrainRequest")
	proto.RegisterType((*PutGrainResponse)(nil), "granary.PutGrainResponse")
	proto.RegisterType((*TakeGrainRequest)(nil), "granary.TakeGrainRequest")
	proto.RegisterType((*TakeGrainResponse)(nil), "granary.TakeGrainResponse")
}

func init() { proto.RegisterFile("granary.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x41, 0x4f, 0x83, 0x30,
	0x14, 0xc7, 0xc5, 0x99, 0x01, 0x6f, 0x31, 0xce, 0xa7, 0x31, 0x6c, 0x7a, 0x30, 0x3d, 0xa9, 0x87,
	0x1d, 0x34, 0xd1, 0xe8, 0x45, 0x63, 0xa2, 0xe8, 0xcd, 0x34, 0x7e, 0x81, 0x8e, 0x3c, 0x17, 0x62,
	0x06, 0xd8, 0xc2, 0x61, 0x7e, 0x42, 0x2f, 0x7e, 0x27, 0x63, 0x29, 0x65, 0x81, 0x7a, 0xf1, 0xc6,
	0xbf, 0xff, 0xfe, 0x78, 0xfc, 0x5a, 0x60, 0x7b, 0x21, 0x45, 0x26, 0xe4, 0x6a, 0x56, 0xc8, 0xbc,
	0xcc, 0xd1, 0x37, 0x91, 0x7d, 0x79, 0xe0, 0x73, 0xfa, 0xa8, 0x48, 0x95, 0x78, 0x0b, 0x23, 0xb3,
	0xfc, 0x9c, 0xbd, 0xe5, 0x91, 0x77, 0xec, 0x9d, 0x8c, 0xce, 0x0f, 0x67, 0x0d, 0x19, 0xb7, 0x9d,
	0x21, 0x9e, 0x36, 0xf8, 0x3a, 0x81, 0x97, 0x10, 0x14, 0x55, 0x19, 0x4b, 0x91, 0x66, 0xd1, 0xa6,
	0xa6, 0x23, 0x4b, 0xbf, 0x98, 0xa2, 0x45, 0xed, 0x5e, 0xbc, 0x86, 0xb0, 0x14, 0xef, 0x54, 0x83,
	0x03, 0x0d, 0x4e, 0x2c, 0xf8, 0xda, 0x34, 0x2d, 0xd9, 0xee, 0xbe, 0x0f, 0xc1, 0x97, 0xf5, 0x3a,
	0xfb, 0xf6, 0x20, 0xe0, 0xa4, 0x8a, 0x3c, 0x53, 0x84, 0x77, 0x2e, 0x97, 0x23, 0xb7, 0x4b, 0x8d,
	0x74, 0x65, 0xae, 0x7a, 0x32, 0x13, 0x87, 0x8c, 0x65, 0x5b, 0x9b, 0x9b, 0xbe, 0xcd, 0xd4, 0x65,
	0x63, 0xd1, 0x35, 0x1d, 0x80, 0x40, 0x9a, 0x82, 0xed, 0x03, 0xf6, 0x8f, 0x9c, 0x3d, 0xc0, 0x9e,
	0xe3, 0xe3, 0x11, 0x61, 0x4b, 0xa5, 0x9f, 0xa4, 0x45, 0x07, 0x5c, 0x3f, 0xe3, 0x14, 0x82, 0x44,
	0x14, 0x22, 0x49, 0xcb, 0x95, 0x36, 0x18, 0x70, 0x9b, 0xd9, 0x29, 0xec, 0x74, 0x6e, 0x04, 0x0f,
	0x60, 0x98, 0x55, 0xcb, 0x39, 0x49, 0xf3, 0x12, 0x93, 0xd8, 0x23, 0x8c, 0xbb, 0xbe, 0x18, 0x81,
	0xaf, 0xaa, 0x24, 0x21, 0xa5, 0xf4, 0xe6, 0x80, 0x37, 0xf1, 0xb7, 0x59, 0x92, 0x52, 0x62, 0x41,
	0x7a, 0x66, 0xc8, 0x9b, 0xc8, 0xce, 0x60, 0xdc, 0xbd, 0xcb, 0x3f, 0x67, 0xc6, 0xb0, 0xdb, 0x3b,
	0xa9, 0xff, 0x0c, 0x9d, 0x0f, 0xf5, 0xff, 0x7e, 0xf1, 0x13, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x8d,
	0x90, 0x8c, 0x00, 0x03, 0x00, 0x00,
}
